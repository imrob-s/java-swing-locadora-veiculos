
package com.imrob.locadoraveiculos.gui.gerenciar;

import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import com.imrob.locadoraveiculos.DTO.CarroDTO;
import com.imrob.locadoraveiculos.DTO.ClienteDTO;
import com.imrob.locadoraveiculos.DTO.LocacaoDTO;
import com.imrob.locadoraveiculos.gui.components.FormManager;
import com.imrob.locadoraveiculos.gui.forms.LocacaoForm;
import com.imrob.locadoraveiculos.gui.model.MappedTableModel;
import com.imrob.locadoraveiculos.services.CarroService;
import com.imrob.locadoraveiculos.services.ClienteService;
import com.imrob.locadoraveiculos.services.LocacaoService;
import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Rob
 */
public class ListaLocacoesGUI extends javax.swing.JPanel {

    public ListaLocacoesGUI() {
        initComponents();
        carregarTabela();
        txtProcurar.putClientProperty(FlatClientProperties.TEXT_FIELD_TRAILING_ICON, new FlatSVGIcon(getClass().getResource("/imgs/icons/procurar.svg")));
        btnNovo.setIcon(new FlatSVGIcon(getClass().getResource("/imgs/icons/add.svg")));
        btnEditar.setIcon(new FlatSVGIcon(getClass().getResource("/imgs/icons/edit.svg")));
        btnApagar.setIcon(new FlatSVGIcon(getClass().getResource("/imgs/icons/delete.svg")));
    }
    
    public void carregarTabela() {
        MappedTableModel<LocacaoDTO> tableModel = new MappedTableModel<>(
                new LocacaoService().findAll(), tabela);
        // tableModel.excludeColumns(new String[]{"modeloId", "fabricanteId", "image"});
        tabela.setModel(tableModel);
        tableModel.setPreferredColumnWidths();
    }
    
    private void apagar() {
        int linhaSelecionada = tabela.getSelectedRow();
        if (linhaSelecionada != -1) {
            Long idLocacao = (Long) tabela.getValueAt(linhaSelecionada, 0);
            LocacaoDTO locacao = new LocacaoService().findById(idLocacao);
            
            ClienteDTO cliente = new ClienteService().findById(locacao.getClientId());
            CarroDTO carro = new CarroService().findById(locacao.getCarroId());
            
            String mensagem = """
                              Tem certeza que deseja apagar Locacao abaixo?
                              
                              Cliente: %s
                              Carro: %s
                              Placa: %s
                              """.formatted(cliente.getNome(), 
                                      carro.getModelo(),
                                      carro.getPlaca());
            int resposta = JOptionPane.showConfirmDialog(this, mensagem, "Confirmação", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                try {
                    new LocacaoService().delete(idLocacao);
                    JOptionPane.showMessageDialog(null, "A locacao selecionada foi apagada com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Não foi possivel apagar a locacao. Erro: " + e.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
                }
            }
            carregarTabela();
        } else {
            JOptionPane.showMessageDialog(null, "Por favor, selecione um carro para apagar.",
                    "Nenhuma carro selecionado", JOptionPane.WARNING_MESSAGE);
        }
            
    }
    
    private void atualizarFiltro() {
        MappedTableModel<LocacaoDTO> tableModel = new MappedTableModel<>(new LocacaoService().findAll());
        TableRowSorter<MappedTableModel<LocacaoDTO>> sorter = new TableRowSorter<>(tableModel);
        tabela.setRowSorter(sorter);
        String texto = txtProcurar.getText();
        if (texto.isEmpty()) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + Pattern.quote(texto)));
            } catch (PatternSyntaxException e) {
                sorter.setRowFilter(null);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        crazyPanel2 = new raven.crazypanel.CrazyPanel();
        crazyPanel1 = new raven.crazypanel.CrazyPanel();
        txtProcurar = new javax.swing.JTextField();
        btnNovo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnApagar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();

        crazyPanel2.setMigLayoutConstraints(new raven.crazypanel.MigLayoutConstraints(
            "wrap,fill,insets 15",
            "[fill]",
            "[grow 0][fill]",
            null
        ));

        crazyPanel1.setFlatLafStyleComponent(new raven.crazypanel.FlatLafStyleComponent(
            "",
            new String[]{
                "JTextField.placeholderText=Procurar;background:#1D272A",
                "background:lighten(#1D272A,8%);borderWidth:1",
                "background:lighten(#1D272A,8%);borderWidth:1",
                "background:lighten(#1D272A,8%);borderWidth:1",
                ""
            }
        ));
        crazyPanel1.setMigLayoutConstraints(new raven.crazypanel.MigLayoutConstraints(
            "",
            "[]push[][]",
            "",
            new String[]{
                "width 200"
            }
        ));

        txtProcurar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtProcurarKeyTyped(evt);
            }
        });
        crazyPanel1.add(txtProcurar);

        btnNovo.setText("Novo");
        btnNovo.addActionListener(this::btnNovoActionPerformed);
        crazyPanel1.add(btnNovo);

        btnEditar.setText("Editar");
        btnEditar.addActionListener(this::btnEditarActionPerformed);
        crazyPanel1.add(btnEditar);

        btnApagar.setText("Apagar");
        btnApagar.addActionListener(this::btnApagarActionPerformed);
        crazyPanel1.add(btnApagar);

        crazyPanel2.add(crazyPanel1);

        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        crazyPanel2.add(jScrollPane1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(crazyPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 706, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(crazyPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 635, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtProcurarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProcurarKeyTyped
        atualizarFiltro();
    }//GEN-LAST:event_txtProcurarKeyTyped

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        FormManager.getInstance().showForm("Cadastro de Veículo", LocacaoForm.getInstance());
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarActionPerformed
        apagar();
    }//GEN-LAST:event_btnApagarActionPerformed

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked

    }//GEN-LAST:event_tabelaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApagar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnNovo;
    private raven.crazypanel.CrazyPanel crazyPanel1;
    private raven.crazypanel.CrazyPanel crazyPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabela;
    private javax.swing.JTextField txtProcurar;
    // End of variables declaration//GEN-END:variables
}
