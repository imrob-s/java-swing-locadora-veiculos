
package com.imrob.locadoraveiculos.gui.consultas;

import com.imrob.locadoraveiculos.DTO.CarroDTO;
import com.imrob.locadoraveiculos.Utils.Utils;
import com.imrob.locadoraveiculos.gui.application.Application;
import com.imrob.locadoraveiculos.gui.cadastro.CadastroCarroGUI;
import com.imrob.locadoraveiculos.gui.components.FormManager;
import com.imrob.locadoraveiculos.gui.model.MappedTableModel;
import com.imrob.locadoraveiculos.gui.model.TableModelCarro;
import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;
import javax.swing.DefaultCellEditor;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.TableColumn;
import javax.swing.table.TableRowSorter;

public class ListaGenericaGUI extends javax.swing.JPanel {

    public ListaGenericaGUI() {
        initComponents();
        carregarTabelaCarros();
    }
    
    public void carregarTabelaCarros() {
        MappedTableModel<CarroDTO> tableModel = new MappedTableModel(Application.listaCarro);
        tabela.setModel(tableModel);
    }
    
    private void editar(){
        int linhaSelecionada = tabela.getSelectedRow();
        if (linhaSelecionada != -1) {
            CarroDTO carro = new CarroDTO();

            carro.setId((Long) tabela.getValueAt(linhaSelecionada, 0));
            carro.setNome((String) tabela.getValueAt(linhaSelecionada, 1));
            carro.setFabricante((String) tabela.getValueAt(linhaSelecionada, 2));
            carro.setCor((String) tabela.getValueAt(linhaSelecionada, 3));
            carro.setPlaca((String) tabela.getValueAt(linhaSelecionada, 4));
            carro.setValorLocacao((Double) tabela.getValueAt(linhaSelecionada, 5));
            carro.setDisponivel((Boolean) tabela.getValueAt(linhaSelecionada, 6));


        } else {
            // Se nenhuma linha foi selecionada, exiba uma mensagem de erro
            JOptionPane.showMessageDialog(null, "Por favor, selecione um carro para editar.",
                    "Nenhuma carro selecionado", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    private void apagar() {
        
    }
    
    private void atualizarFiltro() {
        TableModelCarro tableModel = new TableModelCarro(Application.listaCarro);
        TableRowSorter<TableModelCarro> sorter = new TableRowSorter<>(tableModel);
        tabela.setRowSorter(sorter);
        String texto = txtProcurar.getText();
        if (texto.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + Pattern.quote(texto)));
            } catch (PatternSyntaxException e) {
                sorter.setRowFilter(null);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFooter = new javax.swing.JPanel();
        btnSair = new javax.swing.JButton();
        btnApagar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        pnlHeader = new javax.swing.JPanel();
        txtProcurar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();

        pnlFooter.setBackground(new java.awt.Color(15, 15, 15));
        pnlFooter.setPreferredSize(new java.awt.Dimension(378, 43));

        btnSair.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(this::btnSairActionPerformed);

        btnApagar.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        btnApagar.setText("Apagar");
        btnApagar.addActionListener(this::btnApagarActionPerformed);

        btnEditar.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(this::btnEditarActionPerformed);

        btnNovo.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(this::btnNovoActionPerformed);

        org.jdesktop.layout.GroupLayout pnlFooterLayout = new org.jdesktop.layout.GroupLayout(pnlFooter);
        pnlFooter.setLayout(pnlFooterLayout);
        pnlFooterLayout.setHorizontalGroup(
            pnlFooterLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnlFooterLayout.createSequentialGroup()
                .add(20, 20, 20)
                .add(btnNovo)
                .add(20, 20, 20)
                .add(btnEditar)
                .add(20, 20, 20)
                .add(btnApagar)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(btnSair)
                .add(20, 20, 20))
        );
        pnlFooterLayout.setVerticalGroup(
            pnlFooterLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlFooterLayout.createSequentialGroup()
                .add(15, 15, 15)
                .add(pnlFooterLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnSair)
                    .add(btnApagar)
                    .add(btnEditar)
                    .add(btnNovo))
                .add(15, 15, 15))
        );

        pnlHeader.setBackground(new java.awt.Color(15, 15, 15));

        txtProcurar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtProcurarKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Procurar:");

        org.jdesktop.layout.GroupLayout pnlHeaderLayout = new org.jdesktop.layout.GroupLayout(pnlHeader);
        pnlHeader.setLayout(pnlHeaderLayout);
        pnlHeaderLayout.setHorizontalGroup(
            pnlHeaderLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlHeaderLayout.createSequentialGroup()
                .add(58, 58, 58)
                .add(jLabel1)
                .add(18, 18, 18)
                .add(txtProcurar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 188, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlHeaderLayout.setVerticalGroup(
            pnlHeaderLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlHeaderLayout.createSequentialGroup()
                .add(20, 20, 20)
                .add(pnlHeaderLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtProcurar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlFooter, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
            .add(pnlHeader, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(pnlHeader, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
                .add(0, 0, Short.MAX_VALUE)
                .add(pnlFooter, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        FormManager.getInstance().showForm("Cadastro de Ve√≠culo", new CadastroCarroGUI());
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        Utils.sair(this);
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        editar();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarActionPerformed
       apagar();
    }//GEN-LAST:event_btnApagarActionPerformed

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        if (evt.getClickCount() == 2) { // Verifica se foi um clique duplo
            int row = tabela.getSelectedRow(); // Obt√©m a linha selecionada
            if (row != -1) { // Verifica se uma linha est√° selecionada
                for (int i = 0; i < tabela.getColumnCount(); i++) {
                    TableColumn column = tabela.getColumnModel().getColumn(i);
                    DefaultCellEditor editor = new DefaultCellEditor(new JTextField());
                    column.setCellEditor(editor);
                }
            }
        }
    }//GEN-LAST:event_tabelaMouseClicked

    private void txtProcurarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProcurarKeyTyped
        atualizarFiltro();
    }//GEN-LAST:event_txtProcurarKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApagar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSair;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlFooter;
    private javax.swing.JPanel pnlHeader;
    private javax.swing.JTable tabela;
    private javax.swing.JTextField txtProcurar;
    // End of variables declaration//GEN-END:variables
}
